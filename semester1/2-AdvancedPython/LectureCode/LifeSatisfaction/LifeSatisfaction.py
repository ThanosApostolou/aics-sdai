# This script file fits a linear regression model on Better Life Index data # collected from OECD's website: https://stats.oecd.org/ and statistics about# the Gross Domestic Product Per Capita (GDP) from the IMF's website:# https://www.imf.org/ such that the required .csv files are stored in the # following local directory:# AdvancedPythonProgramming/CourseDescription/python_code/datasets/# Import all the necessary Python frameworks.import matplotlib.pyplot as pltimport numpy as npimport pandas as pdimport sklearn.linear_model#  Step 0: Define a function that just merges the OECD's life satisfaction data #          and the IMF's GDP per capita data. def prepare_country_stats(oecd_bli, gdp_per_capita):    oecd_bli = oecd_bli[oecd_bli["INEQUALITY"]=="TOT"]    oecd_bli = oecd_bli.pivot(index="Country", columns="Indicator", values="Value")    gdp_per_capita.rename(columns={"2015": "GDP per capita"}, inplace=True)    gdp_per_capita.set_index("Country", inplace=True)    full_country_stats = pd.merge(left=oecd_bli, right=gdp_per_capita,                                  left_index=True, right_index=True)    full_country_stats.sort_values(by="GDP per capita", inplace=True)    remove_indices = [0, 1, 6, 8, 33, 34, 35]    keep_indices = list(set(range(36)) - set(remove_indices))    return full_country_stats[["GDP per capita", 'Life satisfaction']].iloc[keep_indices]# Step 1: Load data files oecd_bli_2015.csv and gdp_per_capita.csv into #         corresponding data frames.oecd_bli = pd.read_csv("datasets/oecd_bli_2015.csv", thousands = ',')gdp_per_capita = pd.read_csv("datasets/gdp_per_capita.csv", thousands = ',',                             delimiter = '\t', encoding = 'latin1',                              na_values = "n/a")# Step 2: Prepare the data.country_stats = prepare_country_stats(oecd_bli, gdp_per_capita)X = np.c_[country_stats["GDP per capita"]]Y = np.c_[country_stats["Life satisfaction"]]# Step 3: Visualize the data.country_stats.plot(kind='scatter', x="GDP per capita", y='Life satisfaction')plt.show()# Step 4: Select a linear model.model = sklearn.linear_model.LinearRegression()# Step 5: Train the model.model.fit(X,Y)# Step 6: Get the estimate parameters of the Linear Regression model.theta0 = model.intercept_theta1 = model.coef_print('Optimal parameters theta0 = {0} and theta1 = {1}'.format(theta0[0],theta1[0][0]))# Step 7: Predict the life satisfaction index for Cyprus.Xcyprus = [[22587]];Ycyprus = model.predict(Xcyprus)# Step 8: Plot data points and regression line in the same plot.Xmin = min(X);Xmax = max(X);Xline = np.linspace(Xmin,Xmax,10)Yline = theta0 + theta1 * Xlineplt.plot(X, Y, 'o', color='blue')plt.plot(Xline, Yline, '-k')plt.plot(Xcyprus, Ycyprus, 'or')plt.title('Linear Regression Line')plt.ylabel('Life Satisfaction')plt.xlabel('GDP per capita')plt.show()