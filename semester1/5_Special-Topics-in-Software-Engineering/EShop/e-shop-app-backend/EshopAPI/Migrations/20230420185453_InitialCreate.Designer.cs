// <auto-generated />
using System;
using EshopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EshopAPI.Migrations
{
    [DbContext(typeof(EshopDbContext))]
    [Migration("20230420185453_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EshopAPI.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id")
                        .HasName("PK__Admin__3214EC27C6CF9CD1");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Customer")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3214EC2768BFA8FA");

                    b.HasIndex("Customer");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.CartProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Cart")
                        .HasColumnType("int");

                    b.Property<int>("Product")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CartProd__3214EC27058B84A7");

                    b.HasIndex("Cart");

                    b.HasIndex("Product");

                    b.ToTable("CartProduct", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.EshopUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK__EshopUse__3214EC27FF563622");

                    b.ToTable("EshopUser", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.OrderCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Cart")
                        .HasColumnType("int");

                    b.Property<int>("Customer")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryAdress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderCar__3214EC2729649F63");

                    b.HasIndex("Cart");

                    b.HasIndex("Customer");

                    b.HasIndex("Payment");

                    b.ToTable("OrderCart", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("AMOUNT");

                    b.Property<bool>("Availability")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("AVAILABILITY");

                    b.Property<int>("PaymentCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("PAYMENT_CATEGORY_ID");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC2744E869EA");

                    b.HasIndex("PaymentCategoryId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.PaymentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK__PaymentC__3214EC27508298FB");

                    b.ToTable("PaymentCategory", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("Availability")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("AVAILABILITY");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NAME");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT_CATEGORY_ID");

                    b.HasKey("Id")
                        .HasName("PK__Product__3214EC27E1B5F395");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK__ProductC__3214EC277C910D4F");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Customer")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Product")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Review__3214EC27B60DBCC7");

                    b.HasIndex("Customer");

                    b.HasIndex("Product");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC27ABBEAFFB");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Seller")
                        .HasColumnType("int");

                    b.Property<int>("ShopCategory")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Shop__3214EC27F7F876CA");

                    b.HasIndex("Seller");

                    b.HasIndex("ShopCategory");

                    b.ToTable("Shop", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.ShopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK__ShopCate__3214EC276BB4DC38");

                    b.ToTable("ShopCategory", (string)null);
                });

            modelBuilder.Entity("EshopAPI.Models.Admin", b =>
                {
                    b.HasOne("EshopAPI.Models.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Admin__ROLE_ID__3B75D760");

                    b.HasOne("EshopAPI.Models.EshopUser", "User")
                        .WithMany("Admins")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Admin__USER_ID__3C69FB99");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EshopAPI.Models.Cart", b =>
                {
                    b.HasOne("EshopAPI.Models.EshopUser", "CustomerNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("Customer")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__CUSTOMER__4AB81AF0");

                    b.Navigation("CustomerNavigation");
                });

            modelBuilder.Entity("EshopAPI.Models.CartProduct", b =>
                {
                    b.HasOne("EshopAPI.Models.Cart", "CartNavigation")
                        .WithMany("CartProducts")
                        .HasForeignKey("Cart")
                        .IsRequired()
                        .HasConstraintName("FK__CartProduc__Cart__4D94879B");

                    b.HasOne("EshopAPI.Models.Product", "ProductNavigation")
                        .WithMany("CartProducts")
                        .HasForeignKey("Product")
                        .IsRequired()
                        .HasConstraintName("FK__CartProdu__Produ__4E88ABD4");

                    b.Navigation("CartNavigation");

                    b.Navigation("ProductNavigation");
                });

            modelBuilder.Entity("EshopAPI.Models.OrderCart", b =>
                {
                    b.HasOne("EshopAPI.Models.Cart", "CartNavigation")
                        .WithMany("OrderCarts")
                        .HasForeignKey("Cart")
                        .IsRequired()
                        .HasConstraintName("FK__OrderCart__Cart__5165187F");

                    b.HasOne("EshopAPI.Models.EshopUser", "CustomerNavigation")
                        .WithMany("OrderCarts")
                        .HasForeignKey("Customer")
                        .IsRequired()
                        .HasConstraintName("FK__OrderCart__Custo__52593CB8");

                    b.HasOne("EshopAPI.Models.Payment", "PaymentNavigation")
                        .WithMany("OrderCarts")
                        .HasForeignKey("Payment")
                        .IsRequired()
                        .HasConstraintName("FK__OrderCart__Payme__534D60F1");

                    b.Navigation("CartNavigation");

                    b.Navigation("CustomerNavigation");

                    b.Navigation("PaymentNavigation");
                });

            modelBuilder.Entity("EshopAPI.Models.Payment", b =>
                {
                    b.HasOne("EshopAPI.Models.PaymentCategory", "PaymentCategory")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__PAYMENT__47DBAE45");

                    b.Navigation("PaymentCategory");
                });

            modelBuilder.Entity("EshopAPI.Models.Product", b =>
                {
                    b.HasOne("EshopAPI.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__PRODUCT__44FF419A");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("EshopAPI.Models.Review", b =>
                {
                    b.HasOne("EshopAPI.Models.EshopUser", "CustomerNavigation")
                        .WithMany("Reviews")
                        .HasForeignKey("Customer")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Customer__571DF1D5");

                    b.HasOne("EshopAPI.Models.Product", "ProductNavigation")
                        .WithMany("Reviews")
                        .HasForeignKey("Product")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Product__5629CD9C");

                    b.Navigation("CustomerNavigation");

                    b.Navigation("ProductNavigation");
                });

            modelBuilder.Entity("EshopAPI.Models.Shop", b =>
                {
                    b.HasOne("EshopAPI.Models.EshopUser", "SellerNavigation")
                        .WithMany("Shops")
                        .HasForeignKey("Seller")
                        .IsRequired()
                        .HasConstraintName("FK__Shop__Seller__5AEE82B9");

                    b.HasOne("EshopAPI.Models.ShopCategory", "ShopCategoryNavigation")
                        .WithMany("Shops")
                        .HasForeignKey("ShopCategory")
                        .IsRequired()
                        .HasConstraintName("FK__Shop__ShopCatego__59FA5E80");

                    b.Navigation("SellerNavigation");

                    b.Navigation("ShopCategoryNavigation");
                });

            modelBuilder.Entity("EshopAPI.Models.Cart", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("OrderCarts");
                });

            modelBuilder.Entity("EshopAPI.Models.EshopUser", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Carts");

                    b.Navigation("OrderCarts");

                    b.Navigation("Reviews");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("EshopAPI.Models.Payment", b =>
                {
                    b.Navigation("OrderCarts");
                });

            modelBuilder.Entity("EshopAPI.Models.PaymentCategory", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EshopAPI.Models.Product", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EshopAPI.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EshopAPI.Models.Role", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("EshopAPI.Models.ShopCategory", b =>
                {
                    b.Navigation("Shops");
                });
#pragma warning restore 612, 618
        }
    }
}
